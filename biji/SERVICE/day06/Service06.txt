rsync同步操作


rsync同步操作
• 命令用法
– rsync [选项...]  源目录     目标目录

• 同步与复制的差异
– 复制:完全拷贝源到目标
– 同步:增量拷贝,只传输变化过的数据

同步控制
• rsync操作选项
– -n:测试同步过程,不做实际修改
– --delete:删除目标文件夹内多余的文档
– -a:归档模式,相当于-rlptgoD
– -v:显示详细操作信息
– -z:传输过程中启用压缩/解压

[root@svr7 ~]# mkdir /nsd1903    /nsd04
[root@svr7 ~]# cp /etc/passwd /etc/fstab  /nsd1903/
[root@svr7 ~]# ls /nsd1903/

[root@svr7 ~]# rsync -av /nsd1903    /nsd04   #同步本身
[root@svr7 ~]# ls /nsd04
[root@svr7 ~]# rsync -av /nsd1903/    /nsd04  #同步内容
[root@svr7 ~]# ls /nsd04

[root@svr7 ~]# touch /nsd1903/1.txt
[root@svr7 ~]# ls /nsd1903/
[root@svr7 ~]# ls /nsd04

[root@svr7 ~]# rsync -av /nsd1903/    /nsd04
[root@svr7 ~]# ls /nsd04


[root@svr7 ~]# rsync -av --delete /nsd1903/  /nsd04/
[root@svr7 ~]#  ls /nsd1903
[root@svr7 ~]#  ls /nsd04

[root@svr7 ~]# touch /nsd04/xixi.txt
[root@svr7 ~]#  ls /nsd1903
[root@svr7 ~]#  ls /nsd04
[root@svr7 ~]# rsync -av --delete /nsd1903/  /nsd04/
[root@svr7 ~]#  ls /nsd1903
[root@svr7 ~]#  ls /nsd04

####################################################
远程同步                  
虚拟机A目录/nsd1903与虚拟机B目录/opt进行同步

rsync+SSH同步= rsync + scp

• 与远程的 SSH目录保持同步
– 下行:rsync [...] user@host:远程目录    本地目录
– 上行:rsync [...] 本地目录   user@host:远程目录

虚拟机A:
]# rsync -av --delete /nsd1903/ root@192.168.4.207:/opt/
虚拟机B
]# ls  /opt
]# touch /opt/haxi.txt
]# ls  /opt
虚拟机A:
]# rsync -av --delete /nsd1903/ root@192.168.4.207:/opt/
虚拟机B
]# ls  /opt
###################################################
完成实时同步准备:安装inotify-tools工具
源码包编译安装

源码编译安装的优势
• 主要优点
– 获得软件的最新版,及时修复bug
– 软件功能可按需选择/定制,有更多软件可供选择
– 源码包适用各种平台


rpm包:  rpm -ivh    yum install

源码包:----gcc make开发工具---->可以执行的程序--->运行安装

1.真机上传tools.tar.gz包,到虚拟机A的/root
[student@room9pc01 ~]$ scp /home/student/桌面/tools.tar.gz root@192.168.4.7:/root/

2.验证是否上传成功
[root@svr7 ~]# ls /root/
[root@svr7 ~]# tar -xf /root/tools.tar.gz  -C  /opt
[root@svr7 ~]# ls /opt/tools/
inotify-tools-3.13.tar.gz  other

步骤1:安装gcc make开发工具(安装依赖关系的软件)
[root@svr7 ~]# yum -y install gcc  make
[root@svr7 ~]# rpm -q gcc
[root@svr7 ~]# rpm -q make
步骤2:tar解包,释放源代码至指定目录
]# tar -xf /opt/tools/inotify-tools-3.13.tar.gz -C /
]# ls /inotify-tools-3.13/

步骤3: ./configure 配置,指定安装目录/功能模块等选项
                            
       --prefix=指定安装的位置   

]# cd /inotify-tools-3.13/
]# ./configure  
       
  #检测系统是否安装gcc,检测系统是否可以支持编译安装     
常见提示:gcc没有安装
checking for gcc... no
checking for cc... no
checking for cl.exe... no
configure: error: no acceptable C compiler found in $PATH
See `config.log' for more details.

步骤4:make 编译,生成可执行的二进制程序文件
]# cd /inotify-tools-3.13/
]# make 

步骤5:make install 安装,将编译好的文件复制到安装目录
]# cd /inotify-tools-3.13/
]# make install
]# ls /usr/local/bin/inotifywait 

###################################################
实时同步:虚拟机A目录/nsd1903与虚拟机B目录/opt进行同步

一 实现ssh的无密码验证,生成公钥 私钥

1.虚拟机A生成公钥 私钥
[root@svr7 ~]# ssh-keygen       #一路回车
[root@svr7 ~]# ls /root/.ssh/
authorized_keys  id_rsa  id_rsa.pub  known_hosts

known_hosts:记录曾经远程管理过的主机

2.虚拟机A传递公钥到虚拟机B上
]# ssh-copy-id  root@192.168.4.207

]# rsync -av --delete /nsd1903/ root@192.168.4.207:/opt/

虚拟机B
[root@pc207 ~]# ls /root/.ssh/
authorized_keys
[root@pc207 ~]# 

####################################################

二  监控目录内容的变化

inotifywait监控
• 基本用法
– inotifywait [选项] 目标文件夹

• 常用命令选项
– -m,持续监控(捕获一个事件后不退出)
– -r,递归监控、包括子目录及文件
– -q,减少屏幕输出信息
– -e,指定监视的 modify、move、create、delete、attrib等事件类别



 inotifywait -mrq /nsd1903

 rsync -a --delete /nsd1903/ root@192.168.4.207:/opt/

三  书写shell脚本完成,实时同步操作
       循环解决重复性操作
       for循环:适合写有次数的循环

          for  i  in  值
           do
                        重复性操作
           done

        死循环:无限次的循环
       while循环:适合写无限次的循环

         while [ 1 -eq 1 ]
          do
		      重复执行的操作
          done

[root@svr7 ~]# vim /root/rsync.sh
#!/bin/bash
while  inotifywait -rqq /nsd1903 
 do
 rsync -a --delete /nsd1903/ root@192.168.4.207:/opt/
 done
[root@svr7 ~]# /root/rsync.sh

####################################################



























